plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ussum'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// 버전 관리를 위한 변수 정의
ext {
	queryDslVersion = "5.0.0"
	jwtVersion = "0.11.5"
}

dependencies {
	// Spring Boot 핵심 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// 데이터베이스
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

	// JWT & Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
	implementation 'com.auth0:java-jwt:4.2.1'
	implementation 'com.auth0:jwks-rsa:0.21.1'
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

	// AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Monitoring & Documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// About Rate Limiter
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.bucket4j:bucket4j-core:8.10.1'
	implementation 'com.bucket4j:bucket4j-redis:8.10.1'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Test Dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// MacOS netty resolver
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	//Open Feign
	implementation("org.springframework.cloud:spring-cloud-starter-openfeign:4.1.4")

}

tasks.named('test') {
	useJUnitPlatform()
}


// 컴파일 경고 처리를 위한 설정
tasks.withType(JavaCompile) {
	options.compilerArgs << "-Xlint:deprecation"
	options.compilerArgs << "-Xlint:unchecked"
}

// QueryDSL Q클래스 생성 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// 빌드 시 Q클래스 자동 생성
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

// clean 태스크 실행 시 생성된 Q클래스 삭제
clean {
	delete file(querydslDir)
}